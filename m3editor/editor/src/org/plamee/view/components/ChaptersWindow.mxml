<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				layout="vertical" 
				title="Chapters"
				width="680" height="300" showCloseButton="true" close="closeWindow()"
				creationComplete="onCreateComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import org.plamee.view.events.ChaptersWindowEvent;
			
			public var opened:Boolean = false;
			
			public var allChaptersAC:ArrayCollection;
			
			private function onCreateComplete():void
			{
				
			}
			
			public function openWindow(app:DisplayObject):void
			{
				if(opened == false)
				{
					opened = true;
					PopUpManager.addPopUp(this, app, true);
					PopUpManager.centerPopUp(this);
					this.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
					this.enabled = false;
					dispatchEvent(new ChaptersWindowEvent(ChaptersWindowEvent.GET_CHAPTER_SETTINGS));
				}
			}
			
			public function closeWindow():void
			{
				if(opened == true)
				{
					opened = false;
					PopUpManager.removePopUp(this);
					this.removeEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				}
			}
			
			private function onKeyDown(e:KeyboardEvent):void
			{
				if(e.keyCode == 27) // ESC
					closeWindow();
			}
			
			
			public function initList(value:Array):void
			{
				this.enabled = true;
				allChaptersAC = new ArrayCollection(value);
				allChaptersAC.filterFunction = filterForLoadWindow;
				chaptersSetDG.dataProvider = allChaptersAC;
				allChaptersAC.refresh();
			}
			
			private function onFilterChange():void
			{
				if(allChaptersAC)
					allChaptersAC.refresh();
			}
			
			
			private function filterForLoadWindow(item:Object):Boolean
			{
				if((filterTI != null)&&(filterTI.text != "")&&(item != null)&&(item.name != null))
				{
					var pattern:RegExp = new RegExp(filterTI.text, "i");
					
					return String(item.name).search(pattern) != -1;		
				}
				else
					return true;
			}		
			
			private function addChapters():void
			{
				dispatchEvent(new ChaptersWindowEvent(ChaptersWindowEvent.ADD_CHAPTER_SETTINGS));
			}
			
			
			
			private function openChapters():void
			{
				if(chaptersSetDG.selectedItem != null)
				{
					dispatchEvent(new ChaptersWindowEvent(ChaptersWindowEvent.OPEN_CHAPTER_SETTINGS, chaptersSetDG.selectedItem.id));
				}
				else
				{
					Alert.show("Select chapters settings first");
				}
				
			}
			
			private function deleteChapters():void
			{
				if(chaptersSetDG.selectedItem != null)
				{
					Alert.show("Are you sure?", "Delete chapters settings", Alert.YES|Alert.NO, this, alertClickHandler);
				}
				else
				{
					Alert.show("Select chapters settings first");
				}				
			}
			
			private function alertClickHandler(evt:CloseEvent):void 
			{
				if (evt.detail == Alert.YES) 
				{
					this.enabled = false;
					dispatchEvent(new ChaptersWindowEvent(ChaptersWindowEvent.DELETE_CHAPTER_SETTINGS, chaptersSetDG.selectedItem.id));
				}
			}
			
			public function chapterSettingsDeletedSuccesfuly():void
			{
				this.enabled = true;
				allChaptersAC.removeItemAt(allChaptersAC.getItemIndex(chaptersSetDG.selectedItem));
				allChaptersAC.refresh();
			}
			
			
		]]>
	</mx:Script>
	<mx:DataGrid id="chaptersSetDG" width="100%" height="100%" allowMultipleSelection="true" doubleClickEnabled="true" itemDoubleClick="openChapters()">
		<mx:columns>
			<mx:DataGridColumn dataField="name" headerText="Name"/>
			<mx:DataGridColumn dataField="owner_id" headerText="Issuer"/>
			<mx:DataGridColumn dataField="created_at" headerText="Created"/>
			<mx:DataGridColumn dataField="updated_at" headerText="Last Change"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:TextInput text="" id="filterTI" width="100%" change="onFilterChange()"/>
	
	<mx:ControlBar>
		<mx:Button label="Add" click="addChapters()" />
		<mx:Button label="Open" click="openChapters()" />
		<mx:Button label="Delete" click="deleteChapters()"/>
		<mx:Button label="Cancel" click="closeWindow()"/>
</mx:ControlBar>
</mx:TitleWindow>
