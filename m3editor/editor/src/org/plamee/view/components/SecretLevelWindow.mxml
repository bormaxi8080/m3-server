<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:components="org.plamee.view.components.*" 
				layout="vertical" 
				title="Secret level"
				width="380" height="500" showCloseButton="true" close="closeWindow()"
				creationComplete="onCreateComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import org.plamee.model.vo.BusterVO;
			import org.plamee.view.events.LoadWindowEvent;
			import org.plamee.view.events.SecretLevelWindowEvent;
			
			public var opened:Boolean = false;
			
			private var mArrayBustersCB:ArrayCollection = null;
			private var listAC:ArrayCollection;
			
			private function onCreateComplete():void
			{
				
			}
			
			public function openWindow(app:DisplayObject, exXML:XML=null):void
			{
				if(opened == false)
				{
					opened = true;
					PopUpManager.addPopUp(this, app, true);
					PopUpManager.centerPopUp(this);
					this.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
					
					if(exXML != null)
						importList(exXML);
					else
					{
						mArrayBustersCB = BusterVO.getAllSource();
						listAC = new ArrayCollection();
						
						if(bustersCB)
							bustersCB.dataProvider = mArrayBustersCB;	
						
						if(bustersList)
							bustersList.dataProvider = listAC;	
					}
					
				}
			}
			
			public function closeWindow():void
			{
				if(opened == true)
				{
					opened = false;
					PopUpManager.removePopUp(this);
					this.removeEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				}
			}
			
			private function onKeyDown(e:KeyboardEvent):void
			{
				if(e.keyCode == 27) // ESC
					closeWindow();
			}
			
			private function onCreateCB():void
			{
				if(mArrayBustersCB==null){
					mArrayBustersCB = BusterVO.getAllSource();
				}
				
				if(bustersCB)
					bustersCB.dataProvider = mArrayBustersCB;				
				
			}
			
			private function onPlusClick():void
			{
				var fromAC:ArrayCollection = bustersCB.dataProvider as ArrayCollection;
				if(fromAC.length==0) return;
				var ob:Object = bustersCB.selectedItem;
				ob.col = int(statisticPersentTI.text);
				if(ob.col<=0){ 
					Alert.show("NUMBER must be greater than zero");
					return;
				}
				fromAC.removeItemAt(fromAC.getItemIndex(ob));
				
				var toAC:ArrayCollection = bustersList.dataProvider as ArrayCollection;
				toAC.addItem(ob);
				
				bustersCB.selectedIndex = 0;
				statisticPersentTI.text = "1";
				
				bustersCB.invalidateDisplayList();
				bustersList.invalidateDisplayList();
				
				statisticPersentTI.setFocus();
			}
			
			public function removeStatisticsFromList(value:Object):void
			{
				var toAC:ArrayCollection = bustersList.dataProvider as ArrayCollection;
				toAC.removeItemAt(toAC.getItemIndex(value));
				
				var fromAC:ArrayCollection = bustersCB.dataProvider as ArrayCollection;
				fromAC.addItem(value);
				
				bustersCB.invalidateDisplayList();
				bustersList.invalidateDisplayList();				
			}			
			
			private function onCreateList():void
			{
				if(listAC == null)
					listAC = new ArrayCollection();
				
				bustersList.dataProvider = listAC;			
			}
			
			private function textinputInt(event:Event):void{
				var aTextInput:TextInput = (event.target as TextInput);
				var aInt:int = int((event.target as TextInput).text);
				if(aInt<=0) aInt=1;
				aTextInput.text = ""+aInt;
			}
			
			
			private function exportList():XML
			{
				var temp:ArrayCollection = bustersList.dataProvider as ArrayCollection;
				var idStr:Array;
				var exportXML:XML = new XML('<node type="secretLevel" name="Secret"></node>');
				if(temp.length != 6)
				{	
					Alert.show("Select 6 busters");
					return null;
				}
				else
				{
					for(var i:int = 0; i<temp.length; i++)
					{
						idStr = temp[i].id.split("_");
						exportXML.appendChild(new XML('<node type="buster" id="'+idStr[1]+'" name="Buster'+idStr[1]+'" count="'+temp[i].col+'"/>'));
					}
				}
				
				return exportXML;
			}
			
			private function importList(value:XML):void
			{
				mArrayBustersCB = BusterVO.getAllSource();
				
				var tempOb:Object;
				listAC = new ArrayCollection();
				
				
				for(var i:int = 0; i< value.node.length(); i++)
				{
					tempOb = removeFromCBById(value.node[i].@id);
					if(tempOb != null)
					{
						tempOb.col = value.node[i].@count;
						listAC.addItem(tempOb);
					}
				}
				
				
				if(bustersList)
					bustersList.dataProvider = listAC;
				
				
				if(bustersCB)
					bustersCB.dataProvider = mArrayBustersCB;					
				
			}
			
			private function removeFromCBById(id:int):Object
			{
				for(var i:int=0; i<mArrayBustersCB.length; i++)
				{
					if(mArrayBustersCB.getItemAt(i).id == "6_"+id.toString())
					{
						return mArrayBustersCB.removeItemAt(i);
					}
				}
				return null;
			}
			
			
			private function onOK():void
			{
				var e:SecretLevelWindowEvent = new SecretLevelWindowEvent(SecretLevelWindowEvent.ON_OK);
				e.exportXML = exportList();
				if(e.exportXML != null)
					dispatchEvent(e);
			}
			
		]]>
	</mx:Script>
		<mx:HBox>
			<components:ImageComboBox id="bustersCB" width="60" creationComplete="onCreateCB()">
				<components:itemRenderer>
					<mx:Component>
						<mx:Image source="{AssetsManager.getInstance().getImageClass(data.source)}" >
							<mx:Script>
								<![CDATA[
									import org.plamee.managers.AssetsManager;
								]]>
							</mx:Script>
						</mx:Image>
						
					</mx:Component>
				</components:itemRenderer>
			</components:ImageComboBox>
			<mx:TextInput id="statisticPersentTI" width="60" text="1" change="textinputInt(event)"/>
			<mx:Button styleName="plusButton" click="onPlusClick()" />
		</mx:HBox>
		
		<mx:List id="bustersList" selectable="false" borderColor="#3d3d3d" borderStyle="solid" width="100%" height="100%" creationComplete="onCreateList()" itemRenderer="org.plamee.view.components.BustersListRenderer">
		</mx:List>		

	
	<mx:ControlBar>
		<mx:Button label="OK" click="onOK()" />
		<mx:Button label="Cancel" click="closeWindow()"/>
</mx:ControlBar>
</mx:TitleWindow>
