<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				layout="vertical" 
				title="Open level"
				width="680" height="300" showCloseButton="true" close="closeWindow()"
				creationComplete="onCreateComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import org.plamee.view.events.LoadWindowEvent;
			
			public var opened:Boolean = false;
			
			public var levelsAC:ArrayCollection;
			
			private function onCreateComplete():void
			{
				
			}
			
			public function openWindow(app:DisplayObject):void
			{
				if(opened == false)
				{
					opened = true;
					PopUpManager.addPopUp(this, app, true);
					PopUpManager.centerPopUp(this);
					this.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
					this.enabled = false;
				}
			}
			
			public function closeWindow():void
			{
				if(opened == true)
				{
					opened = false;
					PopUpManager.removePopUp(this);
					this.removeEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				}
			}
			
			private function onKeyDown(e:KeyboardEvent):void
			{
				if(e.keyCode == 27) // ESC
					closeWindow();
			}
			
			
			public function initList(value:Array):void
			{
				this.enabled = true;
				levelsAC = new ArrayCollection(value);
				levelsAC.filterFunction = filterForLoadWindow;
				levelsDG.dataProvider = levelsAC;
				levelsAC.refresh();
			}
			
			private function onFilterChange():void
			{
				if(levelsAC)
					levelsAC.refresh();
			}
			
			
			private function filterForLoadWindow(item:Object):Boolean
			{
				if((filterTI != null)&&(filterTI.text != "")&&(item != null)&&(item.name != null))
				{
					var pattern:RegExp = new RegExp(filterTI.text, "i");
					
					return String(item.name).search(pattern) != -1;		
				}
				else
					return true;
			}			
			
			
			
			private function openLevel():void
			{
				if(levelsDG.selectedItem != null)
				{
					dispatchEvent(new LoadWindowEvent(LoadWindowEvent.LOAD_LEVEL, levelsDG.selectedItem.id));
					this.enabled = false;
				}
				else
				{
					Alert.show("Select level first");
				}
				
			}
			
			private function deleteLevel():void
			{
				if(levelsDG.selectedItem != null)
				{
					Alert.show("Are you sure?", "Delete level", Alert.YES|Alert.NO, this, alertClickHandler);
				}
				else
				{
					Alert.show("Select level first");
				}				
			}
			
			private function alertClickHandler(evt:CloseEvent):void 
			{
				if (evt.detail == Alert.YES) 
				{
					dispatchEvent(new LoadWindowEvent(LoadWindowEvent.DELETE_LEVEL, levelsDG.selectedItem.id));
					this.enabled = false;
				}
			}
			
			public function levelDeletedSuccesfuly():void
			{
				this.enabled = true;
				levelsAC.removeItemAt(levelsAC.getItemIndex(levelsDG.selectedItem));
				levelsAC.refresh();
			}
			
			private function exportLevels():void
			{
				var temp:Array = levelsDG.selectedItems;
				var levelIds:Array = new Array();
				
				if((temp == null)||(temp.length == 0))
				{
					Alert.show("Select level first");
					return;
				}
				
				for(var i:int=0; i< temp.length; i++)
				{
					if(temp[i] != null)
						levelIds.push(temp[i].id)
				}
					
				if((levelIds == null)||(levelIds.length == 0))
				{
					Alert.show("Select level first");
					return;
				}		
				
				var ev:LoadWindowEvent = new LoadWindowEvent(LoadWindowEvent.EXPORT_LEVELS, 0);
				ev.exportLevelsIds = levelIds
				dispatchEvent(ev);
					
			}
			
			
		]]>
	</mx:Script>
	<mx:DataGrid id="levelsDG" width="100%" height="100%" allowMultipleSelection="true">
		<mx:columns>
			<mx:DataGridColumn dataField="name" headerText="Name"/>
			<mx:DataGridColumn dataField="is_public" headerText="Public"/>
			<mx:DataGridColumn dataField="owner_id" headerText="Issuer"/>
			<mx:DataGridColumn dataField="created_at" headerText="Created"/>
			<mx:DataGridColumn dataField="updated_at" headerText="Last Change"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:TextInput text="" id="filterTI" width="100%" change="onFilterChange()"/>
	
	<mx:ControlBar>
		<mx:Button label="Open" click="openLevel()" />
		<mx:Button label="Delete" click="deleteLevel()"/>
		<mx:Button label="Export" click="exportLevels()"/>
		<mx:Button label="Cancel" click="closeWindow()"/>
		<mx:CheckBox label="Show JSON" id="showJson" />
</mx:ControlBar>
</mx:TitleWindow>
